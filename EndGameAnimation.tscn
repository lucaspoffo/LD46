[gd_scene load_steps=9 format=2]

[ext_resource path="res://Assets/Sound/Roar.wav" type="AudioStream" id=1]
[ext_resource path="res://Assets/Sound/Sirene.wav" type="AudioStream" id=2]
[ext_resource path="res://Assets/Sound/Stomps.wav" type="AudioStream" id=3]
[ext_resource path="res://Assets/Sound/GlassBreak.wav" type="AudioStream" id=4]
[ext_resource path="res://Assets/Mask/curtain.png" type="Texture" id=5]

[sub_resource type="Animation" id=1]
resource_name = "End"
length = 34.0
tracks/0/type = "audio"
tracks/0/path = NodePath("GlassBreak")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": null
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 4 )
} ],
"times": PoolRealArray( 1.9, 2.1 )
}
tracks/1/type = "audio"
tracks/1/path = NodePath("Sirene")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 2 )
} ],
"times": PoolRealArray( 11 )
}
tracks/2/type = "audio"
tracks/2/path = NodePath("Roar")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 1 )
}, {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 1 )
} ],
"times": PoolRealArray( 8, 29.5 )
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sirene:volume_db")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 11.1, 13 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ -40.0, -15.0 ]
}
tracks/4/type = "audio"
tracks/4/path = NodePath("Stomps")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"clips": [ {
"end_offset": 0.0,
"start_offset": 0.0,
"stream": ExtResource( 3 )
} ],
"times": PoolRealArray( 16.9 )
}
tracks/5/type = "value"
tracks/5/path = NodePath("Roar:pitch_scale")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 8, 11.4, 29.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.5, 0.5, 1.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("Roar:volume_db")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 29.5 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("ColorRect:material:shader_param/cutoff")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0.1, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 1.0, 0.0 ]
}

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float cutoff : hint_range(0.0, 1.0);
uniform float smooth_size : hint_range(0.0, 1.0);
uniform sampler2D mask : hint_albedo;

uniform vec4 color : hint_color;

void fragment()
{
	float value = texture(mask, UV).r;
	float alpha = smoothstep(cutoff, cutoff + smooth_size, value * (1.0 - smooth_size) + smooth_size);
	COLOR = vec4(color.rgb, alpha);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/cutoff = 0.0
shader_param/smooth_size = 0.3
shader_param/color = null
shader_param/mask = ExtResource( 5 )

[node name="EndGameAnimation" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GlassBreak" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 4 )
pitch_scale = 0.75

[node name="Sirene" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )
volume_db = -15.0

[node name="Stomps" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 3 )

[node name="Roar" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/End = SubResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0 )
__meta__ = {
"_edit_use_anchors_": false
}
